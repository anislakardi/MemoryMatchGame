/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pdd;
import java.awt.Color;
import java.awt.GridLayout;
import java.util.*;
import javax.swing.Timer;
import javax.swing.JButton;
/**
 *
 * @author PC
 */
public class huhu extends javax.swing.JFrame {

    /**
     * Creates new form huhu
     */
    String[] tableDeCouleur = {"red", "red", "green", "green", "blue", "blue", "orange", "orange", "yellow", "yellow", "purple", "purple"};
    String[] etats = {"c", "c", "c", "c", "c", "c", "c", "c", "c", "c", "c", "c"};
    JButton[] cartes;
    JButton[] carteS;
    JButton[] carteSS;
    JButton[] comp;
    int score = 0;
    int i = 0;
    int index;
    String clr ="";
    

    public huhu() {
        initComponents();
         //tableDeCouleur = Fonctions.shuffleArray(tableDeCouleur);  // Shuffle the color array
        cartes = new JButton[]{carte1, carte2, carte3, carte4, carte5, carte6, carte7, carte8, carte9, carte10, carte11, carte12};
        carteS = new JButton[]{carte2,carte3, carte6, carte7};
        carteSS = new JButton[]{carte5, carte6, carte7, carte8, carte9, carte10, carte11, carte12};
        comp = new JButton[2]; // Taille maximale pour comparer deux cartes
        Fonctions.setAllButtonsVisible(cartes,false);
        carteS = Fonctions.shuffleButtons(carteS);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        difficulte = new javax.swing.JComboBox<>();
        LScore = new javax.swing.JLabel();
        bRejouer = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        carte1 = new javax.swing.JButton();
        carte2 = new javax.swing.JButton();
        carte3 = new javax.swing.JButton();
        carte4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        carte5 = new javax.swing.JButton();
        carte6 = new javax.swing.JButton();
        carte7 = new javax.swing.JButton();
        carte8 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        carte9 = new javax.swing.JButton();
        carte10 = new javax.swing.JButton();
        carte11 = new javax.swing.JButton();
        carte12 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(4, 0, 0, 5));

        difficulte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choisissez la difficult√©", "Facile", "Moyen", "Difficile" }));
        difficulte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                difficulteActionPerformed(evt);
            }
        });

        LScore.setText("I AM SCORE");

        bRejouer.setText("rejouer");
        bRejouer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRejouerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bRejouer, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(LScore, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(difficulte, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(difficulte, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LScore, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bRejouer)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        jPanel2.setLayout(new java.awt.GridLayout(1, 4, 5, 0));

        carte1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte1ActionPerformed(evt);
            }
        });
        jPanel2.add(carte1);

        carte2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte2ActionPerformed(evt);
            }
        });
        jPanel2.add(carte2);

        carte3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte3ActionPerformed(evt);
            }
        });
        jPanel2.add(carte3);

        carte4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte4ActionPerformed(evt);
            }
        });
        jPanel2.add(carte4);

        getContentPane().add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        carte5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte5ActionPerformed(evt);
            }
        });
        jPanel3.add(carte5);

        carte6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte6ActionPerformed(evt);
            }
        });
        jPanel3.add(carte6);

        carte7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte7ActionPerformed(evt);
            }
        });
        jPanel3.add(carte7);

        carte8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte8ActionPerformed(evt);
            }
        });
        jPanel3.add(carte8);

        getContentPane().add(jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout(1, 4, 5, 0));

        carte9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte9ActionPerformed(evt);
            }
        });
        jPanel4.add(carte9);

        carte10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte10ActionPerformed(evt);
            }
        });
        jPanel4.add(carte10);

        carte11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte11ActionPerformed(evt);
            }
        });
        jPanel4.add(carte11);

        carte12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carte12ActionPerformed(evt);
            }
        });
        jPanel4.add(carte12);

        getContentPane().add(jPanel4);

        pack();
    }// </editor-fold>//GEN-END:initComponents
   public static String[] shuffleArray(String[] table) {
        // Convert array to a List, shuffle it, then convert it back to an array
        List<String> list = new ArrayList<>(Arrays.asList(table)); // Convert array to a List
        Collections.shuffle(list);  // Shuffle the list
        
        // Convert the list back to an array and return it
        return list.toArray(new String[0]);
    }

    private void bRejouerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRejouerActionPerformed
        // TODO add your handling code here:
        carteS = Fonctions.shuffleButtons(carteS);enableAllButtons(carteS);
        cartes = Fonctions.shuffleButtons(carteS);enableAllButtons(cartes);
        carteSS = Fonctions.shuffleButtons(carteS);enableAllButtons(carteSS);
        score = 0;
        LScore.setText(String.valueOf(score));
    }//GEN-LAST:event_bRejouerActionPerformed

    private void difficulteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_difficulteActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        score = 0;i=0;
        LScore.setText(String.valueOf(score));
        switch(choix){
            case "Choisissez la difficult√©":     Fonctions.setAllButtonsVisible(cartes,false);    break;
            case "Facile":    Fonctions.setAllButtonsVisible(cartes,false);Fonctions.setAllButtonsVisible(carteS,true);carteS = Fonctions.shuffleButtons(carteS);enableAllButtons(carteS);      break;
            case "Moyen":     Fonctions.setAllButtonsVisible(cartes,false);Fonctions.setAllButtonsVisible(carteSS,true);carteSS = Fonctions.shuffleButtons(carteSS);enableAllButtons(carteSS);   break;
            case "Difficile": Fonctions.setAllButtonsVisible(cartes,true);cartes = Fonctions.shuffleButtons(cartes);enableAllButtons(cartes);break;
        }
        
    }//GEN-LAST:event_difficulteActionPerformed

    private void carte2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte2ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Facile":compare4(carte2,carteS);break;
            case "Moyen":compare4(carte2,carteSS);break;
            case "Difficile":compare4(carte2,cartes);break;
        }
    }//GEN-LAST:event_carte2ActionPerformed

    private void carte3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte3ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Facile":compare4(carte3,carteS);break;
            case "Moyen":compare4(carte3,carteSS);break;
            case "Difficile":compare4(carte3,cartes);break;
        }
    }//GEN-LAST:event_carte3ActionPerformed

    private void carte6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte6ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Facile":compare4(carte6,carteS);break;
            case "Moyen":compare4(carte6,carteSS);break;
            case "Difficile":compare4(carte6,cartes);break;
        }
    }//GEN-LAST:event_carte6ActionPerformed

    private void carte7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte7ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Facile":compare4(carte7,carteS);break;
            case "Moyen":compare4(carte7,carteSS);break;
            case "Difficile":compare4(carte7,cartes);break;
        }
    }//GEN-LAST:event_carte7ActionPerformed

    private void carte5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte5ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Moyen":compare4(carte5,carteSS);break;
            case "Difficile":compare4(carte5,cartes);break;
        }
    }//GEN-LAST:event_carte5ActionPerformed

    private void carte8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte8ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Moyen":compare4(carte8,carteSS);break;
            case "Difficile":compare4(carte8,cartes);break;
        }
    }//GEN-LAST:event_carte8ActionPerformed

    private void carte9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte9ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Moyen":compare4(carte9,carteSS);break;
            case "Difficile":compare4(carte9,cartes);break;
        }
    }//GEN-LAST:event_carte9ActionPerformed

    private void carte10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte10ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Moyen":compare4(carte10,carteSS);break;
            case "Difficile":compare4(carte10,cartes);break;
        }
    }//GEN-LAST:event_carte10ActionPerformed

    private void carte11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte11ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Moyen":compare4(carte11,carteSS);break;
            case "Difficile":compare4(carte11,cartes);break;
        }
    }//GEN-LAST:event_carte11ActionPerformed

    private void carte12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte12ActionPerformed
        // TODO add your handling code here:
        String choix = (String)difficulte.getSelectedItem();
        switch(choix){
            case "Moyen":compare4(carte12,carteSS);break;
            case "Difficile":compare4(carte12,cartes);break;
        }
    }//GEN-LAST:event_carte12ActionPerformed

    private void carte1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte1ActionPerformed
        // TODO add your handling code here:
        compare4(carte1,cartes);
    }//GEN-LAST:event_carte1ActionPerformed

    private void carte4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carte4ActionPerformed
        // TODO add your handling code here:
        compare4(carte4,cartes);
    }//GEN-LAST:event_carte4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(huhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(huhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(huhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(huhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new huhu().setVisible(true);
            }
        });
    }
    
    public void compare4(JButton b,JButton[] tab){
        comp[i] = b;
        index = getIndex(tab, b);
        clr = tableDeCouleur[index];
        setButtonColor(b,clr);
        
        if(i == 0){
            i++;
        }
        else{
            if(comp[i]== comp[i - 1]){
                i = 0;
                comp[i].setBackground(Color.white);
            }
            else{
                Timer timer = new Timer(500, e -> {
                // Actions to take after the delay
                if (comp[i].getBackground() == comp[i - 1].getBackground()) {
                    comp[i].setEnabled(false);
                    comp[i - 1].setEnabled(false);
                    score += 10;
                } else {
                    comp[i].setBackground(Color.white);
                    comp[i - 1].setBackground(Color.white);
                }
                LScore.setText("Score: " + score);
                i = 0;
            });

            // Start the timer
            timer.setRepeats(false); // Don't repeat, trigger once after 500ms
            timer.start();}
        }
        
    }
    
public static int getIndex(JButton[] carteS, JButton boutonRecherche) {
        for (int j = 0; j < carteS.length; j++) {
            if (carteS[j] == boutonRecherche) { // Comparaison par r√©f√©rence
                return j;
            }
        }
        return -1; // Retourne -1 si le bouton n'est pas trouv√©
    }

public static void setButtonColor(JButton button, String colorName) {
        switch (colorName) {
            case "red":
                button.setBackground(Color.RED);
                break;
            case "green":
                button.setBackground(Color.GREEN);
                break;
            case "blue":
                button.setBackground(Color.BLUE);
                break;
            case "orange":
                button.setBackground(Color.ORANGE);
                break;
            case "yellow":
                button.setBackground(Color.YELLOW);
                break;
            case "purple":
                button.setBackground(new Color(128, 0, 128)); // Pas de constante pr√©-d√©finie pour violet
                break;
        }
    }

public void enableAllButtons(JButton[] buttons) {
    for (JButton button : buttons) {
        if (button != null) { // V√©rifie que le bouton n'est pas null
            button.setEnabled(true);
            button.setBackground(Color.white);
        }
    }
}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LScore;
    private javax.swing.JButton bRejouer;
    private javax.swing.JButton carte1;
    private javax.swing.JButton carte10;
    private javax.swing.JButton carte11;
    private javax.swing.JButton carte12;
    private javax.swing.JButton carte2;
    private javax.swing.JButton carte3;
    private javax.swing.JButton carte4;
    private javax.swing.JButton carte5;
    private javax.swing.JButton carte6;
    private javax.swing.JButton carte7;
    private javax.swing.JButton carte8;
    private javax.swing.JButton carte9;
    private javax.swing.JComboBox<String> difficulte;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
